{
	// Place your luogu workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"start": {
		"scope": "cpp",
		"prefix": "oj",
		"body": [
			"#include <cstdio>",
			"",
			"using namespace std;", 
			"", 
			"int main() {", 
			"\t$0", 
			"}"
		],
		"description": "quick start oj code"
	},
	"inf": {
		"scope": "cpp",
		"prefix": ["const int inf", "inf"],
		"body": "const int inf = 0x3fffffff;",
		"description": "claim inf"
	},
	"tarjon": {
		"scope": "cpp",
		"prefix": "tarjon",
		"body": [
			"int dfh[MaxV];",
			"int low[MaxV];",
			"bool ins[MaxV];",
			"stack<int> st;",
			"",
			"void tarjon(int u) {",
			"\tstatic int time = 0;",
			"\tdfh[u] = low[u] = ++time;",
			"\tst.push(u);",
			"\tins[u] = true;",
			"",
			"\tfor (auto v : G[u]) {",
			"\t\tif (dfh[v] == -1) {",
			"\t\t\ttarjon(v);",
			"\t\t\tlow[u] = min(low[u], low[v]);",
			"\t\t} else if (ins[v] == true) {",
			"\t\t\tlow[u] = min(low[u], dfh[v]);",
			"\t\t}",
			"\t}",
			"",
			"\tif (low[u] == dfh[u]) {",
			"\t\tint w = 0;",
			"\t\tdo {",
			"\t\t\tw = st.top();",
			"\t\t\tins[w] = false;",
			"\t\t\tst.pop();",
			"\t\t}  while(w != u);",
			"\t}",
			"}"
		],
		"description": "tarjon code template"
	}
}